From: <ÓÉ Microsoft Internet Explorer 5 ±£´æ>
Subject: Errata: Modern Compiler Implementation in C
Date: Sat, 9 Apr 2011 21:50:07 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_001D_01CBF700.17B04600"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.5994

This is a multi-part message in MIME format.

------=_NextPart_000_001D_01CBF700.17B04600
Content-Type: text/html;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.cs.princeton.edu/~appel/modern/basic/c/errata.html

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Errata: Modern Compiler Implementation in C</TITLE>
<META http-equiv=3DContent-Type content=3D"text/html; charset=3Dgb2312">
<META content=3D"MSHTML 6.00.2900.6058" name=3DGENERATOR></HEAD>
<BODY bgColor=3D#ffffff>
<H2><FONT color=3D#d00000>Modern Compiler Implementation in C: =
<SMALL>Basic=20
Techniques</SMALL></FONT></H2>&copy;1997 by <A=20
href=3D"http://www.cs.princeton.edu/~appel"><STRONG>Andrew W.=20
Appel</STRONG></A><BR>
<H3><A=20
href=3D"http://www.cs.princeton.edu/~appel/modern/basic/bugform.cgi?c">Re=
port an=20
error in the book or software</A></H3>
<H2>Errors in first printing</H2><STRONG>All of these errors are fixed =
in the <A=20
href=3D"http://www.cs.princeton.edu/~appel/modern/c">1998 =
edition</A>.</STRONG>=20
Please do not continue to report errors in the 1997 (preliminary) =
edition.=20
<P><STRONG>Page 9.</STRONG> The definition of <TT>A_CompoundStm</TT> =
should be: <PRE>A_stm A_CompoundStm(A_stm stm1, A_stm stm2) {
  A_stm s =3D checked_malloc(sizeof(*s));
  s-&gt;kind =3D A_compoundStm;
  s-&gt;u.compound.stm1=3Dstm1; s-&gt;u.compound.stm2=3Dstm2;
  return s;
}</PRE>
<P><STRONG>Page 10.</STRONG> In Program 1.5, two occurrences of =
<TT>String</TT>=20
should be <TT>string</TT>, <TT>typdef</TT> should be <TT>typedef</TT>, =
and the=20
definition of <TT>A_binop</TT> should be moved up. <A=20
href=3D"http://www.cs.princeton.edu/~appel/modern/basic/c/chap1/slp.h">A =
corrected=20
version</A> is available as part of the <A=20
href=3D"http://www.cs.princeton.edu/~appel/modern/basic/c/chap1">software=
 for=20
Chapter 1</A>.=20
<P><STRONG>Page 13.</STRONG> The 11th line from the bottom (2nd line of =
the=20
program example), should read,<BR><TT>struct table {string id; int =
value; Table_=20
tail};</TT>=20
<P><STRONG>Page 15.</STRONG>The <TT>insert</TT> function should use=20
<TT>strcmp(key,t-&gt;key)&lt;0</TT> instead of =
<TT>key&lt;t-&gt;key</TT>, and=20
similarly use <TT>strcmp(key,t-&gt;key)&gt;0</TT> instead of=20
<TT>key&gt;t-&gt;key</TT>.<BR>Line 5 of the program should contain=20
<TT>t-&gt;right=3Dr;</TT> and not <TT>T-&gt;right=3Dr;</TT>=20
<P><STRONG>Page 22.</STRONG> Second-to-last paragraph and last paragraph =
should=20
refer to six automata in the figure, not four.<BR>Figure 2.4, the edge =
from=20
state 2 to state 4 should be labeled <TT>a-e,g-z,0-9</TT>; state 5 =
should be a=20
final state recognizing <TT>error</TT>.=20
<P><STRONG>Page 27.</STRONG> Figure 2.6, the automaton for <I>M*</I> =
should be=20
<IMG src=3D"http://www.cs.princeton.edu/~appel/modern/text/nfadefas.gif" =

align=3Dtop>=20
<P><STRONG>Page 29.</STRONG> The last statement of the algorithm =
(<I>j</I> &lt;-=20
<I>j</I>+1) should not be indented so far; it should be at the same =
level as the=20
<B>foreach</B>.=20
<P><STRONG>Page 34.</STRONG> Reference to <TT>toy.lex</TT> should be=20
<TT>tiger.lex</TT>.=20
<P><STRONG>Page 47.</STRONG> In the first line, the enumerator list =
should have=20
braces: <PRE>enum token {IF, THEN, ELSE, BEGIN, END, PRINT, SEMI, NUM, =
EQ};
</PRE>
<P><STRONG>Page 49.</STRONG> The last <STRONG>if</STRONG> statement =
should be=20
indented to the same position as the others.=20
<P><STRONG>Page 53.</STRONG> Last line of text should refer to "same =
nonterminal=20
<I>S</I>", not "same nonterminal <I>X</I>".<BR>Grammar 3.14, both =
occurrences of=20
<I>F'</I> should be <I>T'</I>.=20
<P><STRONG>Page 54.</STRONG> Table 3.16: Entries in rows <I>E</I> and =
<I>T</I>=20
should not have $ symbol; entry for row <I>F</I>, column =
<STRONG>(</STRONG>=20
should be <I>F-&gt;(E)</I>.=20
<P><STRONG>Page 54.</STRONG> First paragraph should read, "In such a =
case, we=20
can <I>left factor</I> the grammar -- that is, take the allowable =
endings and=20
make a new nonterminal <I>X</I> to stand for them."=20
<P><STRONG>Page 57.</STRONG> On the 5th line of the figure, <I>E</I> =
should have=20
the subscript 11. On the 7th line from the bottom of the figure, the =
second=20
occurrence of <TT>id</TT> should have subscript 20, not 4.=20
<P><STRONG>Page 60.</STRONG> In the state 3 box, the first line should =
read=20
<STRONG>S-&gt;(.L)</STRONG>, not <STRONG>L-&gt;(.L)</STRONG>=20
<P><STRONG>Page 62.</STRONG> Figure 3.20 should have an arrow from state =
3 to=20
state 2, labeled by <STRONG>x</STRONG>. <BR><STRONG>Grammar =
3.22</STRONG>,=20
<UL>
  <LI>rule 1 should read <I>E-&gt;T+E</I>=20
  <LI>rule 2 should read <I>E-&gt;T</I>.</LI></UL>
<P><STRONG>Page 63.</STRONG> Figure 3.23, third item in state 1 should =
read=20
<I>E-&gt;.T</I> and the edge from state 3 to state 4 should be labeled =
with +=20
instead of comma.=20
<P><STRONG>Page 65.</STRONG> Figure 3.25,=20
<DL>
  <DT>State 1:
  <DD>Fourth and fifth items should read <I>T -&gt; .x</I> instead of =
<I>E -&gt;=20
  .x</I>=20
  <DT>State 4:
  <DD>There should be fifth item, <I>T -&gt; .x</I> with lookahead +, =
and the=20
  edge labelled <I>x</I> should go to state 5, not 7.=20
  <DT>State 7:
  <DD>There should be no state 7.=20
  <DT>Table row 4:
  <DD>should have <I>s5</I> instead of <I>s7</I>.=20
  <DT>Table row 7:
  <DD>should be deleted. </DD></DL>
<P><STRONG>Page 65.</STRONG> Paragraph beginning "Merging states 5 and =
7" should=20
be deleted. For Grammar 3.22 the LR(1) table, the LALR(1) table, and the =
SLR=20
table are all the same.=20
<P><STRONG>Page 66.</STRONG> Figure 3.26 incorrectly shows LL(1) as a =
subset of=20
SLR. In fact, LL(1) is not even a subset of LALR(1): there is an LL(1) =
grammar=20
that is not LALR(1).=20
<P><STRONG>Page 67.</STRONG>"As explained on page 53, factoring the =
grammar will=20
eliminate the ambiguity." This is incorrect; factoring does not =
eliminate the=20
ambiguity, but a different grammar transformation does.=20
<P><STRONG>Page 68.</STRONG> Grammar 3.27, production 4 should read=20
<STRONG><I>S</I> --&gt; begin <I>L</I> end</STRONG>=20
<P><STRONG>Page 74.</STRONG> 5th line from the bottom should read=20
<STRONG><I>S</I> --&gt; id :=3D <I>E</I></STRONG>, not <I>S</I> --&gt; =
id :=3D id.=20
<P><STRONG>Page 77.</STRONG> Exercise 3.5, production 4's left-hand side =
should=20
be <I>E</I>, not <I>B</I>.=20
<P><STRONG>Page 81.</STRONG> The <TT>NUM</TT> case of the <TT>F</TT> =
function=20
should return <TT>tokval.num</TT>, not <TT>val.num</TT>.<BR>There should =
be no =3D=20
sign after <TT>int Tprime(int a)</TT>.=20
<P><STRONG>Page 91.</STRONG> The abstract syntax fragment at the bottom =
of the=20
page should read, <PRE>A_LetExp(
  A_DecList(A_VarDec(S_Symbol("a"),NULL,A_IntExp(5)),
  A_DecList(A_FunctionDec(
    A_FundecList(A_Fundec(
      S_Symbol("f"),NULL,S_Symbol("int"),
      A_CallExp(S_Symbol("g"), ...)),
    A_FundecList(A_Fundec(
      S_Symbol("g"),
        A_FieldList(S_Symbol("i"),S_Symbol("int"),NULL),
        NULL,
        A_CallExp(S_Symbol("f"), ...)),
    NULL))),
  NULL)),
  A_CallExp(S_Symbol("f"), NULL))
</PRE>
<P><STRONG>Page 92.</STRONG> The abstract syntax fragment in the middle =
of the=20
page should read, <PRE>A_TypeDec(
  A_NametyList(A_Namety(S_Symbol("tree"),
      A_RecordTy(
         A_FieldList(A_Field(S_Symbol("key"),S_Symbol("int")),
         A_FieldList(A_Field(S_Symbol("children"),S_Symbol("treelist")),
         NULL)))),
  A_NametyList(A_NameTy(S_Symbol("treelist"),
      A_RecordTy(
         A_FieldList(A_Field(S_Symbol("head"),S_Symbol("tree")),
         A_FieldList(A_Field(S_Symbol("tail"),S_Symbol("treelist")),
         NULL)))),
  NULL)))
</PRE>
<P><STRONG>Page 93.</STRONG> <TT>printabsyn.sml</TT> should be=20
<TT>prabsyn.[ch]</TT>=20
<P><STRONG>Page 96.</STRONG> The 7th line from the bottom should read,=20
``<I>D</I> is compiled using <IMG=20
src=3D"http://www.cs.princeton.edu/~appel/modern/text/sigma.gif"><SUB><SM=
ALL>0</SMALL></SUB>=20
+ <IMG=20
src=3D"http://www.cs.princeton.edu/~appel/modern/text/sigma.gif"><SUB><SM=
ALL>2</SMALL></SUB>=20
+ <IMG=20
src=3D"http://www.cs.princeton.edu/~appel/modern/text/sigma.gif"><SUB><SM=
ALL>4</SMALL></SUB>,=20
and the result of the analysis is ...'' (the subscripts are incorrect in =
the=20
book).=20
<P><STRONG>Page 97.</STRONG> Program 5.2, fourth line from bottom, =
should be=20
<TT>void pop(string key){</TT> with no star.=20
<P><STRONG>Page 101.</STRONG> Program 5.6, sixth line from bottom, =
Braces are=20
mistakenly omitted around the initializer. Should be: <PRE>static struct =
S_symbol_ marksym =3D {"<MARK>",0};
</PRE>
<P><STRONG>Page 102.</STRONG> Table 5.7: the return type of =
<TT>TAB_enter</TT>=20
should be <TT>void</TT>, not <TT>TAB_table</TT>. <BR>In the first line =
of text,=20
<TT>table.put(x,b)</TT> should be <TT>S_enter(table, x, b)</TT>=20
<P><STRONG>Page 108.</STRONG> In bottom half of page, 4th line of =
program=20
example, <TT>S_look(env,...)</TT> should be <TT>S_look(venv,...)</TT>.=20
<P><STRONG>Page 109.</STRONG> Near bottom of page,=20
<TT>transDec(venv,tenv,d);</TT> should be=20
<TT>transDec(venv,tenv,d-&gt;head);</TT>=20
<P><STRONG>Page 110.</STRONG> In the code fragment (for case =
<TT>A_typeDec</TT>)=20
at bottom of the page, the line <PRE>struct expty e =3D =
transExp(venv,tenv,d-&gt;u.var.init);
</PRE>should be deleted.=20
<P><STRONG>Page 111.</STRONG> The <TT>functionDec</TT> clause of=20
<TT>transDec</TT> shown on this page has several errors. Here is a =
correct=20
version: <PRE>void transDec(S_table venv, S_table tenv, A_dec d) {
 switch(d-&gt;kind) {
     .
     .
     .
  case A_functionDec: {
   A_fundec f =3D d-&gt;u.function-&gt;head;
   Ty_ty resultTy =3D tylook(tenv,f-&gt;result,f-&gt;pos);
   Ty_tyList formalTys =3D makeFormalTyList(tenv,f-&gt;params);
   S_enter(venv,f-&gt;name,E_FunEntry(formalTys,resultTy));
   S_beginScope(venv);
   {A_fieldList l; Ty_tyList t;=20
    for(l=3Df-&gt;params, t=3DformalTys; l; l=3Dl-&gt;tail, =
t=3Dt-&gt;tail)=20
       S_enter(venv,l-&gt;head-&gt;name,E_VarEntry(t-&gt;head));
   }
   transExp(venv, tenv, d-&gt;u.function-&gt;body);
   S_endScope(venv);
   break;
  }
</PRE>The function <TT>tylook</TT> should call <TT>S_look</TT>, and if =
the type=20
is not declared, should use its <TT>t-&gt;pos</TT> argument to formulate =
an=20
error message.=20
<P><STRONG>Page 115.</STRONG> Exercise 5.2, The line beginning=20
<I>s</I><SUB>4</SUB> should be, =
<I>s</I><SUB>4</SUB>=3D<I>s</I><SUB>1</SUB> union=20
<I>s</I><SUB>3</SUB>.=20
<P><STRONG>Page 127.</STRONG> Last three lines, references to=20
<TT>F_BoolList</TT> should be <TT>U_BoolList</TT>.=20
<P><STRONG>Page 129.</STRONG> Sentence after <TT>function m...</TT> =
should start=20
with ``If <I>x</I> stays in parameter register 1 throughout <I>m</I>, =
...''=20
<P><STRONG>Page 134.</STRONG> 7th line from bottom, <TT>Fr_access</TT> =
should be=20
<TT>F_access</TT>. Last line, <TT>Frame.access</TT> should be =
<TT>F_access</TT>.=20

<P><STRONG>Page 137.</STRONG> (Not a bug, but a clarification): Exercise =
6.2. If=20
the machine passes parameter 1 in <TT>r1</TT> and parameter 2 in =
<TT>r2</TT>=20
(for example), then clearly <I>x</I> arrives in <TT>r1</TT>. But it =
cannot stay=20
there during the call to <TT>h(y,y)</TT>; so where does the compiler =
arrange to=20
keep it?=20
<P><STRONG>Page 143.</STRONG>The 13th line from the bottom should read,=20
"MOVE(MEM(<I>e</I><SUB>1</SUB>),<I>e</I><SUB>2</SUB>) Evaluate=20
<I>e</I><SUB>1</SUB>, yielding address <I>a</I>. Then evaluate=20
<I>e</I><SUB>2</SUB>, and store the result into <I>wordSize</I> bytes of =
memory=20
starting at <I>a</I>."=20
<P><STRONG>Page 145.</STRONG> 12th line from bottom, delete the word=20
<TT>cond</TT>.=20
<P><STRONG>Page 146.</STRONG> Each time <TT>PatchList</TT> is used in =
the code=20
example at the top of the page, the first argument should have an =
<TT>&amp;</TT>=20
before it.=20
<P><STRONG>Page 147.</STRONG> Program 7.3, in the <TT>return</TT> =
statement,=20
<TT>false</TT> and <TT>true</TT> should be <TT>f</TT> and <TT>t</TT>.=20
<P><STRONG>Page 147.</STRONG> Bottom of the page, last sentence should =
refer to=20
<TT>Tr_nx</TT>:=20
<BLOCKQUOTE>Also, <TT>unCx</TT> should never expect to see a =
<TT>Tr_exp</TT>=20
  with a <TT>kind</TT> of <TT>Tr_nx</TT> -- such a case should never =
occur in=20
  compiling a well typed Tiger program. </BLOCKQUOTE>
<P><STRONG>Page 148.</STRONG> First sentence should refer to =
<TT>tenv</TT> and=20
<TT>venv</TT>, not <TT>tenv</TT> and <TT>env</TT>.=20
<P><STRONG>Page 150.</STRONG> 7th line, <TT>Translate.simpleVar</TT> =
should be=20
<TT>Tr_simpleVar</TT>.=20
<P><STRONG>Page 156.</STRONG> Eleventh line from the bottom, =
<TT>Tree.NAME</TT>=20
should be <TT>T_Name</TT>=20
<P><STRONG>Page 160.</STRONG> Section 7.3, second paragraph: =
<TT>transDec</TT>=20
does not return a result record containing new environments, it just =
returns a=20
<TT>Tr_Exp</TT>.=20
<P><STRONG>Page 178.</STRONG>The last sentence of the third paragraph =
should=20
begin, "But 8.3c shows a better trace covering..."=20
<P><STRONG>Page 187.</STRONG> In the second table, the second tile shown =

matching the MEM node does not correspond to any instruction of the =
Jouette=20
machine, and should not be listed.=20
<P><STRONG>Page 193.</STRONG> In the "<B>Two-address instructions</B>"=20
paragraph, the instructions should read, <PRE>mov t1,t2       t1 &lt;- =
t2
add t1,t3       t1 &lt;- t1 + t3
</PRE>
<P><STRONG>Page 199-200.</STRONG> Calls to munchStm and munchExp are =
missing=20
parentheses around the argument parameter, operators <TT>+</TT> and =
<TT>^</TT>=20
are used (inconsistently!) for string concatenation, and =
<TT>lab.toString()</TT>=20
should be <TT>Temp_labeLstring(lab)</TT>.=20
<P><STRONG>Page 200.</STRONG> Figure 9.7, the case for MOVE(TEMP(i), e2) =
should=20
emit <PRE>emit(AS_Move("ADD   `d0 &lt;- `s0 + r0\n", i, munchExp(e2)))
</PRE>instead of the AS_Oper expression that is shown.=20
<P><STRONG>Page 210.</STRONG> In Table 10.5, 4th iteration, row 3, =
change=20
<B>c</B> to <B>b</B>.=20
<P><STRONG>Page 229.</STRONG> In Figure 11.6, the graph-node =
<STRONG>d</STRONG>=20
should have the color 1, not 4.=20
<P><STRONG>Page 229.</STRONG> (Not a bug, but a clarification): =
Precolored nodes=20
should be considered to have infinite degree. Therefore, =
<I>simplify</I>,=20
<I>freeze</I>, and <I>spill</I> cannot be performed on them. However, an =

ordinary (non-precolored) node may be coalesced with a precolored node. =
<A=20
href=3D"http://www.cs.princeton.edu/~appel/modern/text/color1.html">Click=
 here for=20
a detailed example.</A>=20
<P><STRONG>Page 232.</STRONG>First line should read, <I>Degree(T)&lt;K. =
Since T=20
will lose the neighbor X and gain the neighbor R, ...</I>=20
<P><STRONG>Page 239.</STRONG> In procedure FreezeMoves, before the =
second=20
<B>if</B> statement, insert the statement <B>v:=3DGetAlias(v)</B>.=20
<P><STRONG>Page 265.</STRONG> Figure 13.7b, arrows should come from =
first and=20
third elements of root set, not first and second elements.=20
<P><STRONG>Page 296.</STRONG> 14th line from the bottom, delete "a =
classless=20
language".=20
<P><STRONG>Page 301.</STRONG> Third line from bottom should say, "Thus,=20
<TT>addTen</TT> is a function=20
<TT>g</TT>(<I>x</I>)=3D<TT>addFive</TT>(<TT>addFive</TT>(<I>x</I>))".=20
<P><STRONG>Page 320.</STRONG> In the program fragment on the right, the =
third=20
line from the bottom should read, <PRE> in if y&gt;8 then loop(y)
</PRE>Second line from the bottom of the page should read:<BR>program on =
the=20
right will return 0, but the program on the left will first get=20
<P><STRONG>Page 324.</STRONG> Last line should refer to <TT>h(i)</TT>, =
not=20
<TT>i</TT>.=20
<P><STRONG>Page 339.</STRONG> On the 8th line from the bottom, delete =
first two=20
words.=20
<P><STRONG>Page 340.</STRONG> In Table 16.4, the last two rows should =
read,<BR>
<TABLE>
  <TBODY>
  <TR>
    <TD><I>f(a<SUB>1</SUB>,...,a<SUB>n</SUB>)</I></TD>
    <TD align=3Dmiddle width=3D30>{}</TD>
    <TD><I>All expressions of the form M</I>[<I>x</I>]</TD></TR>
  <TR>
    <TD><I>t :=3D f(a<SUB>1</SUB>,...,a<SUB>n</SUB>)</I></TD>
    <TD align=3Dmiddle width=3D30>{}</TD>
    <TD>expressions containing <I>t</I> + <I>all expressions of the form =

      M</I>[<I>x</I>]</TD></TR></TBODY></TABLE>Also, the paragraph =
beginning "Given=20
<I>gen</I> and <I>kill</I>" says the word "successors" when it should =
say=20
"predecessors".=20
<P><STRONG>Page 341.</STRONG> In the table, in the column headed=20
<I>gen</I>[<I>s</I>], delete each of the three instances of=20
"-<I>kill</I>[<I>s</I>]".=20
<P><STRONG>Page 345.</STRONG> Algorithm 16.5 should read, =
<PRE>Topological-sort:
    N :=3D number of nodes
    for all nodes i
        mark[i] :=3D false
    DFS(start-node)

function DFS(i)
   if mark[i]=3Dfalse
        mark[i] :=3D true
        for each successor s of node i
              DFS(s)
        sorted[N] :=3D i
        N :=3D N-1
</PRE>
<P><STRONG>Page 346.</STRONG> Algorithm 16.6, the first line should =
read,=20
<BR><I>W</I> :=3D the set of all nodes=20
<P><STRONG>Page 355.</STRONG> The one-line table under "USING MAY-ALIAS=20
INFORMATION" should read,=20
<TABLE>
  <TBODY>
  <TR>
    <TH>Statement <I>s</I> </TH>
    <TH><I>gen</I>[<I>s</I>]</TH>
    <TH><I>kill</I>[<I>s</I>]</TH></TR>
  <TR>
    <TD><I>M</I>[<I>a</I>] :=3D <I>b</I></TD>
    <TD width=3D30>{}</TD>
    <TD>{M</I>[<I>x</I>] | <I>a</I> may-alias <I>x</I> at=20
  <I>s</I>}</TD></TR></TBODY></TABLE>The example beginning "Now we can =
analyze the=20
following program fragment", though technically correct, does not =
properly=20
illustrate the use of may-alias information. <A=20
href=3D"http://www.cs.princeton.edu/~appel/modern/text/mayalias.html">Her=
e's a=20
better example.</A>=20
<P><STRONG>Page 362.</STRONG> The set equation for <I>D</I>[<I>n</I>] =
applies to=20
all nodes except the start node <I>s</I><SUB>0</SUB>; the equation for =
the start=20
node is <I>D</I>[<I>s</I><SUB>0</SUB>]=3D{<I>s</I><SUB>0</SUB>}.=20
<P><STRONG>Page 365.</STRONG> Lines 5-7, definition of <STRONG>Nested=20
loops</STRONG> should be: If <I>A</I> and <I>B</I> are loops with =
headers=20
<I>a</I> and <I>b</I> respectively, such that <I>a</I> not-equal =
<I>b</I> and=20
<I>b</I> is in <I>A</I>, then the nodes of <I>B</I> are a proper subset =
of the=20
nodes of <I>A</I>.=20
<P><STRONG>Page 367.</STRONG> In the paragraph headed by=20
<STRONG>HOISTING</STRONG>, 5th line, replace "<I>a</I>&lt;<I>b</I>" by=20
"<I>i</I>&gt;=3D<I>N</I> initially."=20
<H3>Acknowledgments</H3>Thanks to Jeffrey Hsu, Max Hailperin, Torben =
Mogensen,=20
Mikael Petterson, Doug Morgan, and others for reporting these errors.=20
</BODY></HTML>

------=_NextPart_000_001D_01CBF700.17B04600
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.cs.princeton.edu/~appel/modern/text/nfadefas.gif

R0lGODdhpgBHAPAAAAAAAP///ywAAAAApgBHAAAC/oyPqcvtD6OctNqLs968+w+G4kiW5omm6sq2
7gvH8kzX9o3n+s73/gYICofEovAnO36KHCYyFewQUconCaAZwrRWEFdSrUW7Uko4dyZb0gg2b6z2
wkVfeVyKPeUD+9D8PuHml9A3+Ae4cFhSaKCIx4h44HgF2UhXF8lX6WG0KTlZYZSpqQd2CBoq+IRa
9lB15nkR1enD2tow2RcrW7n7Ynuboevl6qsCHMzgu2ccYdxsAt0E0czMCTaDnJwYajkdGCP97drN
Z6ZsJt6kTqja+FwOXSfOLgwE5/R5vi/NRN+liNmUd4msxeuE0N+aVZuWFfrTz1ugOf9+xHLYjlC8
w3QKKvZYRs2cpYcblbGKWAsbOWuMqkkyCS7mR5UO8mCx2VFmr3LOUspEZw5nzpAvCwKD55MmUJFM
NdZss5MnLiTyao6x6SggSVzastZjgXKJqKF+ZrnDERZsqTtpoSzK5FHPV3Kj4so5m2WUxHS0eEGZ
i+buRCraAAJu56lwKsVxGBe7OfAuXr1QHU8ti4mysMhJMmsekfAwYs6faYQ+Pba06tWsW7t+DTu2
7Nm0a9u+jTu37t28e/v+DTy48OHEi88uAAA7

------=_NextPart_000_001D_01CBF700.17B04600
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.cs.princeton.edu/~appel/modern/text/sigma.gif

R0lGODlhBwAHAPAAAP///wAAACH5BAEAAAAALAAAAAAHAAcAAAINRI4HtrHNnnPSUGVxAQA7

------=_NextPart_000_001D_01CBF700.17B04600--
